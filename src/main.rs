extern crate libc;

use std::mem;

fn execute(insts: Vec<u8>) {
    unsafe {
        let page = libc::mmap(
            std::ptr::null_mut(),
            insts.len(),
            libc::PROT_EXEC | libc::PROT_READ | libc::PROT_WRITE,
            libc::MAP_ANONYMOUS | libc::MAP_PRIVATE,
            -1,
            0
        );
        let program: *mut u8 = mem::transmute(page);
        program.copy_from_nonoverlapping(insts.as_ptr(), insts.len());
        let f: fn() -> i64 = mem::transmute(page);
        f();
    }
}
fn main() {
    let insts: Vec<u8> = vec!{
        0x48, 0xC7, 0xC0, 0x00, 0x00, 0x00, 0x00,
        0x48, 0xC7, 0xC7, 0x00, 0x00, 0x00, 0x00,
        0x4C, 0x89, 0xEE,
        0x48, 0xC7, 0xC2, 0x01, 0x00, 0x00, 0x00,
        0x0F, 0x05,
        0x48, 0xC7, 0xC0, 0x01, 0x00, 0x00, 0x00,
        0x48, 0xC7, 0xC7, 0x01, 0x00, 0x00, 0x00,
        0x4C, 0x89, 0xEE,
        0x48, 0xC7, 0xC2, 0x01, 0x00, 0x00, 0x00,
        0x0F, 0x05,
        0xc3
    };
    execute(insts)
}
